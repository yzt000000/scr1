array set traceInfo {statusMessage {Finished successfully.} Connect {{<tt>i_ahb/hmaster</tt> {<I>open (unconnected)</I>}} {{<tt>i_apb/paddr[31:8]</tt>} {<I>open (unconnected)</I>}} {<tt>HCLK_hclk</tt> <tt>i_ahb/hclk</tt>} {<tt>HCLK_hclk</tt> <tt>i_apb/hclk</tt>} {<tt>HRESETn_hresetn</tt> <tt>i_ahb/hresetn</tt>} {<tt>HRESETn_hresetn</tt> <tt>i_apb/hresetn</tt>} {<tt>PCLK_pclk</tt> <tt>i_gpio/pclk</tt>} {<tt>PCLK_pclk</tt> <tt>i_uart/pclk</tt>} {<tt>PRESETn_presetn</tt> <tt>i_gpio/presetn</tt>} {<tt>PRESETn_presetn</tt> <tt>i_uart/presetn</tt>} {<tt>d_port_haddr</tt> <tt>i_ahb/haddr_m2</tt>} {<tt>i_port_haddr</tt> <tt>i_ahb/haddr_m1</tt>} {<tt>d_port_hburst</tt> <tt>i_ahb/hburst_m2</tt>} {<tt>i_port_hburst</tt> <tt>i_ahb/hburst_m1</tt>} {<tt>d_port_hbusreq</tt> <tt>i_ahb/hbusreq_m2</tt>} {<tt>i_port_hbusreq</tt> <tt>i_ahb/hbusreq_m1</tt>} {<tt>i_ahb/hgrant_m2</tt> <tt>d_port_hgrant</tt>} {<tt>i_ahb/hgrant_m1</tt> <tt>i_port_hgrant</tt>} {<tt>d_port_hlock</tt> <tt>i_ahb/hlock_m2</tt>} {<tt>i_port_hlock</tt> <tt>i_ahb/hlock_m1</tt>} {<tt>d_port_hprot</tt> <tt>i_ahb/hprot_m2</tt>} {<tt>i_port_hprot</tt> <tt>i_ahb/hprot_m1</tt>} {<tt>i_ahb/hrdata</tt> <tt>d_port_hrdata</tt>} {<tt>i_ahb/hrdata</tt> <tt>i_port_hrdata</tt>} {<tt>i_ahb/hready</tt> <tt>d_port_hready</tt>} {<tt>i_ahb/hready</tt> <tt>i_port_hready</tt>} {<tt>i_ahb/hresp</tt> <tt>d_port_hresp</tt>} {<tt>i_ahb/hresp</tt> <tt>i_port_hresp</tt>} {<tt>d_port_hsize</tt> <tt>i_ahb/hsize_m2</tt>} {<tt>i_port_hsize</tt> <tt>i_ahb/hsize_m1</tt>} {<tt>d_port_htrans</tt> <tt>i_ahb/htrans_m2</tt>} {<tt>i_port_htrans</tt> <tt>i_ahb/htrans_m1</tt>} {<tt>d_port_hwdata</tt> <tt>i_ahb/hwdata_m2</tt>} {<tt>i_port_hwdata</tt> <tt>i_ahb/hwdata_m1</tt>} {<tt>d_port_hwrite</tt> <tt>i_ahb/hwrite_m2</tt>} {<tt>i_port_hwrite</tt> <tt>i_ahb/hwrite_m1</tt>} {<tt>i_ahb/haddr</tt> <tt>ahb_mem_haddr</tt>} {<tt>i_ahb/haddr</tt> <tt>ahb_reg_haddr</tt>} {<tt>i_ahb/haddr</tt> <tt>i_apb/haddr</tt>} {<tt>i_ahb/hburst</tt> <tt>ahb_mem_hburst</tt>} {<tt>i_ahb/hburst</tt> <tt>ahb_reg_hburst</tt>} {<tt>i_ahb/hburst</tt> <tt>i_apb/hburst</tt>} {<tt>i_ahb/hmastlock</tt> <tt>ahb_mem_hmastlock</tt>} {<tt>i_ahb/hmastlock</tt> <tt>ahb_reg_hmastlock</tt>} {<tt>i_ahb/hprot</tt> <tt>ahb_mem_hprot</tt>} {<tt>i_ahb/hprot</tt> <tt>ahb_reg_hprot</tt>} {<tt>ahb_mem_hrdata</tt> <tt>i_ahb/hrdata_s3</tt>} {<tt>ahb_reg_hrdata</tt> <tt>i_ahb/hrdata_s2</tt>} {<tt>i_apb/hrdata</tt> <tt>i_ahb/hrdata_s1</tt>} {<tt>i_ahb/hready</tt> <tt>ahb_mem_hready</tt>} {<tt>i_ahb/hready</tt> <tt>ahb_reg_hready</tt>} {<tt>i_ahb/hready</tt> <tt>i_apb/hready</tt>} {<tt>ahb_mem_hready_resp</tt> <tt>i_ahb/hready_resp_s3</tt>} {<tt>ahb_reg_hready_resp</tt> <tt>i_ahb/hready_resp_s2</tt>} {<tt>i_apb/hready_resp</tt> <tt>i_ahb/hready_resp_s1</tt>} {<tt>ahb_mem_hresp</tt> <tt>i_ahb/hresp_s3</tt>} {<tt>ahb_reg_hresp</tt> <tt>i_ahb/hresp_s2</tt>} {<tt>i_apb/hresp</tt> <tt>i_ahb/hresp_s1</tt>} {<tt>i_ahb/hsel_s3</tt> <tt>ahb_mem_hsel</tt>} {<tt>i_ahb/hsel_s2</tt> <tt>ahb_reg_hsel</tt>} {<tt>i_ahb/hsel_s1</tt> <tt>i_apb/hsel</tt>} {<tt>i_ahb/hsize</tt> <tt>ahb_mem_hsize</tt>} {<tt>i_ahb/hsize</tt> <tt>ahb_reg_hsize</tt>} {<tt>i_ahb/hsize</tt> <tt>i_apb/hsize</tt>} {<tt>i_ahb/htrans</tt> <tt>ahb_mem_htrans</tt>} {<tt>i_ahb/htrans</tt> <tt>ahb_reg_htrans</tt>} {<tt>i_ahb/htrans</tt> <tt>i_apb/htrans</tt>} {<tt>i_ahb/hwdata</tt> <tt>ahb_mem_hwdata</tt>} {<tt>i_ahb/hwdata</tt> <tt>ahb_reg_hwdata</tt>} {<tt>i_ahb/hwdata</tt> <tt>i_apb/hwdata</tt>} {<tt>i_ahb/hwrite</tt> <tt>ahb_mem_hwrite</tt>} {<tt>i_ahb/hwrite</tt> <tt>ahb_reg_hwrite</tt>} {<tt>i_ahb/hwrite</tt> <tt>i_apb/hwrite</tt>} {{<tt>i_apb/paddr[6:0]</tt>} <tt>i_gpio/paddr</tt>} {{<tt>i_apb/paddr[7:0]</tt>} <tt>i_uart/paddr</tt>} {<tt>i_apb/penable</tt> <tt>i_gpio/penable</tt>} {<tt>i_apb/penable</tt> <tt>i_uart/penable</tt>} {<tt>i_gpio/prdata</tt> <tt>i_apb/prdata_s0</tt>} {<tt>i_uart/prdata</tt> <tt>i_apb/prdata_s1</tt>} {<tt>i_apb/psel_s0</tt> <tt>i_gpio/psel</tt>} {<tt>i_apb/psel_s1</tt> <tt>i_uart/psel</tt>} {<tt>i_apb/pwdata</tt> <tt>i_gpio/pwdata</tt>} {<tt>i_apb/pwdata</tt> <tt>i_uart/pwdata</tt>} {<tt>i_apb/pwrite</tt> <tt>i_gpio/pwrite</tt>} {<tt>i_apb/pwrite</tt> <tt>i_uart/pwrite</tt>} {<tt>SIO_cts_n</tt> <tt>i_uart/cts_n</tt>} {<tt>i_uart/rts_n</tt> <tt>SIO_rts_n</tt>} {<tt>SIO_sin</tt> <tt>i_uart/sin</tt>} {<tt>i_uart/sout</tt> <tt>SIO_sout</tt>} {<tt>DW_apb_gpio_API_gpio_ext_porta</tt> {<tt>i_gpio/gpio_ext_porta[7:0]</tt>}} {{<tt>i_gpio/gpio_porta_ddr[7:0]</tt>} <tt>DW_apb_gpio_API_gpio_porta_ddr</tt>} {{<tt>i_gpio/gpio_porta_dr[7:0]</tt>} <tt>DW_apb_gpio_API_gpio_porta_dr</tt>}} CreateExPort {{output <tt>ahb_mem_haddr</tt> {31 : 0} ahb_mem/haddr} {output <tt>ahb_mem_hburst</tt> {2 : 0} ahb_mem/hburst} {output <tt>ahb_mem_hmastlock</tt> {<I>single bit</I>} ahb_mem/hmastlock} {output <tt>ahb_mem_hprot</tt> {3 : 0} ahb_mem/hprot} {input <tt>ahb_mem_hrdata</tt> {31 : 0} ahb_mem/hrdata} {output <tt>ahb_mem_hready</tt> {<I>single bit</I>} ahb_mem/hready} {input <tt>ahb_mem_hready_resp</tt> {<I>single bit</I>} ahb_mem/hready_resp} {input <tt>ahb_mem_hresp</tt> {1 : 0} ahb_mem/hresp} {output <tt>ahb_mem_hsel</tt> {<I>single bit</I>} ahb_mem/hsel} {output <tt>ahb_mem_hsize</tt> {2 : 0} ahb_mem/hsize} {output <tt>ahb_mem_htrans</tt> {1 : 0} ahb_mem/htrans} {output <tt>ahb_mem_hwdata</tt> {31 : 0} ahb_mem/hwdata} {output <tt>ahb_mem_hwrite</tt> {<I>single bit</I>} ahb_mem/hwrite} {output <tt>ahb_reg_haddr</tt> {31 : 0} ahb_reg/haddr} {output <tt>ahb_reg_hburst</tt> {2 : 0} ahb_reg/hburst} {output <tt>ahb_reg_hmastlock</tt> {<I>single bit</I>} ahb_reg/hmastlock} {output <tt>ahb_reg_hprot</tt> {3 : 0} ahb_reg/hprot} {input <tt>ahb_reg_hrdata</tt> {31 : 0} ahb_reg/hrdata} {output <tt>ahb_reg_hready</tt> {<I>single bit</I>} ahb_reg/hready} {input <tt>ahb_reg_hready_resp</tt> {<I>single bit</I>} ahb_reg/hready_resp} {input <tt>ahb_reg_hresp</tt> {1 : 0} ahb_reg/hresp} {output <tt>ahb_reg_hsel</tt> {<I>single bit</I>} ahb_reg/hsel} {output <tt>ahb_reg_hsize</tt> {2 : 0} ahb_reg/hsize} {output <tt>ahb_reg_htrans</tt> {1 : 0} ahb_reg/htrans} {output <tt>ahb_reg_hwdata</tt> {31 : 0} ahb_reg/hwdata} {output <tt>ahb_reg_hwrite</tt> {<I>single bit</I>} ahb_reg/hwrite} {input <tt>d_port_haddr</tt> {31 : 0} d_port/haddr} {input <tt>d_port_hburst</tt> {2 : 0} d_port/hburst} {input <tt>d_port_hbusreq</tt> {<I>single bit</I>} d_port/hbusreq} {output <tt>d_port_hgrant</tt> {<I>single bit</I>} d_port/hgrant} {input <tt>d_port_hlock</tt> {<I>single bit</I>} d_port/hlock} {input <tt>d_port_hprot</tt> {3 : 0} d_port/hprot} {output <tt>d_port_hrdata</tt> {31 : 0} d_port/hrdata} {output <tt>d_port_hready</tt> {<I>single bit</I>} d_port/hready} {output <tt>d_port_hresp</tt> {1 : 0} d_port/hresp} {input <tt>d_port_hsize</tt> {2 : 0} d_port/hsize} {input <tt>d_port_htrans</tt> {1 : 0} d_port/htrans} {input <tt>d_port_hwdata</tt> {31 : 0} d_port/hwdata} {input <tt>d_port_hwrite</tt> {<I>single bit</I>} d_port/hwrite} {input <tt>DW_apb_gpio_API_gpio_ext_porta</tt> {7 : 0} DW_apb_gpio-API/gpio_ext_porta} {output <tt>DW_apb_gpio_API_gpio_porta_ddr</tt> {7 : 0} DW_apb_gpio-API/gpio_porta_ddr} {output <tt>DW_apb_gpio_API_gpio_porta_dr</tt> {7 : 0} DW_apb_gpio-API/gpio_porta_dr} {input <tt>HCLK_hclk</tt> {<I>single bit</I>} HCLK/hclk} {input <tt>HRESETn_hresetn</tt> {<I>single bit</I>} HRESETn/hresetn} {input <tt>i_port_haddr</tt> {31 : 0} i_port/haddr} {input <tt>i_port_hburst</tt> {2 : 0} i_port/hburst} {input <tt>i_port_hbusreq</tt> {<I>single bit</I>} i_port/hbusreq} {output <tt>i_port_hgrant</tt> {<I>single bit</I>} i_port/hgrant} {input <tt>i_port_hlock</tt> {<I>single bit</I>} i_port/hlock} {input <tt>i_port_hprot</tt> {3 : 0} i_port/hprot} {output <tt>i_port_hrdata</tt> {31 : 0} i_port/hrdata} {output <tt>i_port_hready</tt> {<I>single bit</I>} i_port/hready} {output <tt>i_port_hresp</tt> {1 : 0} i_port/hresp} {input <tt>i_port_hsize</tt> {2 : 0} i_port/hsize} {input <tt>i_port_htrans</tt> {1 : 0} i_port/htrans} {input <tt>i_port_hwdata</tt> {31 : 0} i_port/hwdata} {input <tt>i_port_hwrite</tt> {<I>single bit</I>} i_port/hwrite} {input <tt>PCLK_pclk</tt> {<I>single bit</I>} PCLK/pclk} {input <tt>PRESETn_presetn</tt> {<I>single bit</I>} PRESETn/presetn} {input <tt>SIO_cts_n</tt> {<I>single bit</I>} SIO/cts_n} {output <tt>SIO_rts_n</tt> {<I>single bit</I>} SIO/rts_n} {input <tt>SIO_sin</tt> {<I>single bit</I>} SIO/sin} {output <tt>SIO_sout</tt> {<I>single bit</I>} SIO/sout}} statusColor green}
